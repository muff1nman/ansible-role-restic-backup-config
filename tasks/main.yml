---
- name: Setup rclone directory
  file:
    state: directory
    path: "{{ desktop_user_vars.dir }}/.config/rclone"
  when:
  - restic_use_rclone is defined
  - restic_use_rclone
- name: Copy inplace rclone config
  copy:
    content: "{{ rclone_conf }}"
    dest: "{{ desktop_user_vars.dir }}/.config/rclone/rclone.conf"
    mode: 0600
  when:
  - restic_use_rclone is defined
  - restic_use_rclone
- name: Setup restic directory
  file:
    state: directory
    path: "{{ desktop_user_vars.dir }}/.config/restic"
- name: Setup restic excludes file
  template:
    src: restic-excludes
    dest: "{{ desktop_user_vars.dir }}/.config/restic/excludes"
- name: Setup restic password file
  copy:
    content: "{{ restic_password }}"
    dest: "{{ desktop_user_vars.dir }}/.config/restic/pass"
    mode: 0600
- name: Setup healthcheck
  uri:
    body: |
      {
        "name": "{{ inventory_hostname }} Restic Backup",
        "tags": "backup",
        "timeout": 259200,
        "grace": 43200,
        "channels": "*",
        "unique": [ "name" ]
      }
    body_format: json
    method: POST
    headers:
      X-Api-Key: "{{ healthcheck_api_key }}"
    url: "https://{{ healthcheck_host }}/api/v1/checks/"
    return_content: yes
    status_code: "200,201"
  register: restic_healthcheck
  changed_when: restic_healthcheck.status == 201
- name: Setup ping url variable
  set_fact:
    restic_snitch_ping_url: "{{ restic_healthcheck.json.ping_url }}"
- name: Setup restic user service
  template:
    src: restic.service
    dest: "{{ desktop_user_vars.dir }}/.config/systemd/user/restic.service"
  notify: [ 'systemd user' ]
- name: Setup restic timer service
  copy:
    src: restic.timer
    dest:  "{{ desktop_user_vars.dir }}/.config/systemd/user/restic.timer"
  notify: [ 'systemd user' ]
- meta: flush_handlers
- name: Enable and start restic timer
  service:
    name: restic.timer
    state: started
    enabled: yes
    user: yes
  environment:
    DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/{{ desktop_user_vars.uid }}/bus"
